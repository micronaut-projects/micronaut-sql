sourceSets {
    txTest {
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

configurations {
    txTestImplementation.extendsFrom implementation
    txTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-graal"
    annotationProcessor "io.micronaut.docs:micronaut-docs-asciidoc-config-props:$micronautDocsVersion"
    // needed because otherwise IntelliJ integration broken
    compileOnly "io.micronaut:micronaut-inject-java"
    compileOnly "org.graalvm.nativeimage:svm"
    testCompileOnly "io.micronaut:micronaut-inject-java"

    api "io.micronaut:micronaut-jdbc:$micronautVersion"
    api "io.micronaut:micronaut-inject:$micronautVersion"
    api "org.jooq:jooq:3.13.2"
    compileOnly "org.springframework:spring-jdbc:$springVersion"
    compileOnly "io.micronaut.data:micronaut-data-tx:$micronautDataVersion"

    testRuntimeOnly project(":jdbc-tomcat")
    testRuntimeOnly "com.h2database:h2:1.4.200"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation "io.micronaut:micronaut-spring"
    testImplementation "io.micronaut:micronaut-http-server-netty"
    testImplementation "io.micronaut:micronaut-http-client"
    testImplementation "io.micronaut:micronaut-management"
    testImplementation "io.micronaut.configuration:micronaut-micrometer-core:1.3.1"
    testImplementation "org.springframework:spring-jdbc:$springVersion"

    txTestRuntimeOnly project(":jdbc-tomcat")
    txTestRuntimeOnly "com.h2database:h2:1.4.200"
    txTestAnnotationProcessor "io.micronaut:micronaut-inject-java:$micronautVersion"
    txTestAnnotationProcessor "io.micronaut.data:micronaut-data-processor:$micronautDataVersion"
    txTestImplementation "io.micronaut.data:micronaut-data-tx:$micronautDataVersion"
    txTestImplementation("io.micronaut:micronaut-inject-groovy")
    txTestImplementation("org.spockframework:spock-core:${spockVersion}")
    txTestRuntimeOnly "ch.qos.logback:logback-classic:1.2.3"
}

task txTest(type: Test) {
    testClassesDirs = sourceSets.txTest.output.classesDirs
    classpath = sourceSets.txTest.runtimeClasspath
    shouldRunAfter test
}
check.dependsOn txTest
project.afterEvaluate {
    checkstyleTxTest.enabled = false
}
