plugins {
    id 'io.micronaut.application' apply false
    id 'io.micronaut.library' apply false
}

subprojects { Project subproject ->

    apply plugin: "java"
    apply plugin: "groovy"

    group "io.micronaut.example"

    repositories {
        jcenter()
        mavenCentral()
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    configurations {
        all*.exclude module: "byte-buddy"
        all*.exclude module: "javassist"
    }

    if (subproject.getName().startsWith("common")) {
        apply plugin: 'io.micronaut.library'

        micronaut {
            version project.ext.micronautVersion
        }

        return
    }

    apply plugin: 'io.micronaut.application'

    micronaut {
        version project.ext.micronautVersion
        runtime "netty"
        testRuntime "spock"
    }

    dependencies {
        runtimeOnly "io.micronaut.sql:micronaut-jdbc-hikari"
        runtimeOnly "ch.qos.logback:logback-classic"

        implementation "io.micronaut:micronaut-http-client"
        implementation project(":test-graalvm-hibernate-jpa:common")
        testImplementation project(":test-graalvm-hibernate-jpa:common-tests")

        testImplementation "io.micronaut.test:micronaut-test-core:$micronautTestVersion"
        testImplementation platform("org.testcontainers:testcontainers-bom:$testContainersVersion")
        testImplementation "org.testcontainers:spock"
        testImplementation "org.testcontainers:jdbc"
    }

    mainClassName = "example.Application"
}

project("common") {
    dependencies {
        implementation "io.micronaut:micronaut-http-client"
        annotationProcessor "io.micronaut:micronaut-graal"
        implementation project(":hibernate-jpa")
    }
}
project("common-tests") {
    dependencies {
        implementation "io.micronaut:micronaut-http-client"
        implementation "io.micronaut.test:micronaut-test-core:$micronautTestVersion"
        implementation platform("org.testcontainers:testcontainers-bom:$testContainersVersion")
        implementation "org.testcontainers:spock"
        implementation "org.testcontainers:jdbc"
    }
}
project("h2") {
    dependencies {
        runtimeOnly "com.h2database:h2"
    }
    nativeImage {
        args("--report-unsupported-elements-at-runtime")
    }
}
project("mssql") {
    dependencies {
        runtimeOnly "com.microsoft.sqlserver:mssql-jdbc"
        testImplementation "org.testcontainers:mssqlserver"
    }
    nativeImage {
        args("--report-unsupported-elements-at-runtime")
        args("-H:+AddAllCharsets")
    }
}
project("postgres") {
    dependencies {
        runtimeOnly "org.postgresql:postgresql"
        testImplementation "org.testcontainers:postgresql"
    }
}
project("oracle") {
    dependencies {
        runtimeOnly "com.oracle.database.jdbc:ojdbc8:$ojdbcVersion"
        testImplementation "org.testcontainers:oracle-xe"
    }
}
project("mysql") {
    dependencies {
        runtimeOnly "mysql:mysql-connector-java"
        testImplementation "org.testcontainers:mysql"
    }
}
project("mariadb") {
    dependencies {
        runtimeOnly "org.mariadb.jdbc:mariadb-java-client"
        testImplementation "org.testcontainers:mariadb"
    }
}