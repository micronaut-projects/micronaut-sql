[versions]
commons-dbcp = "2.9.0"
h2 = "2.1.212"
hibernate = "5.5.9.Final"
hikari = "4.0.3"
jakarta-inject-api = "2.0.1"
jakarta-persistence-api = "2.2.3"
jakarta-transaction-api = "1.3.3"
jasync = "1.2.3"
javax-inject = "1"
jaxb-api = "2.3.1"
jdbi = "3.20.1"
jooq = "3.14.12"
mariadb-driver = "2.7.5"
mssql-driver = "9.4.1.jre8"
mysql-driver = "8.0.29"
ojdbc = "21.5.0.0"
postgres-driver = "42.3.4"
sfm-reflect = "8.2.3"
spring = "5.3.19"
tomcat-jdbc = "10.0.20"
vertx = "4.2.2"

# Micronaut
micronaut-test = "3.1.1"


[libraries]
# BOMs
boms-jdbi3 = { module = "org.jdbi:jdbi3-bom", version.ref = "jdbi" }

# Micronaut
micronaut-aop = { module = "io.micronaut:micronaut-aop" }
micronaut-cache-caffeine = { module = "io.micronaut.cache:micronaut-cache-caffeine" }
micronaut-cache-core = { module = "io.micronaut.cache:micronaut-cache-core" }
micronaut-context = { module = "io.micronaut:micronaut-context" }
micronaut-data-tx = { module = "io.micronaut.data:micronaut-data-tx" }
micronaut-data-tx-hibernate = { module = "io.micronaut.data:micronaut-data-tx-hibernate" }
micronaut-function-web = { module = "io.micronaut:micronaut-function-web" }
micronaut-graal = { module = "io.micronaut:micronaut-graal" }
micronaut-hibernate-validator = { module = "io.micronaut.configuration:micronaut-hibernate-validator" }
micronaut-http-client = { module = "io.micronaut:micronaut-http-client" }
micronaut-http-server-netty = { module = "io.micronaut:micronaut-http-server-netty" }
micronaut-inject = { module = "io.micronaut:micronaut-inject" }
micronaut-inject-groovy = { module = "io.micronaut:micronaut-inject-groovy" }
micronaut-inject-java = { module = "io.micronaut:micronaut-inject-java" }
micronaut-json-core = { module = "io.micronaut:micronaut-json-core" }
micronaut-management = { module = "io.micronaut:micronaut-management" }
micronaut-micrometer-core = { module = "io.micronaut.micrometer:micronaut-micrometer-core" }
micronaut-runtime = { module = "io.micronaut:micronaut-runtime" }
micronaut-spring = { module = "io.micronaut.spring:micronaut-spring" }
micronaut-spring-annotation = { module = "io.micronaut.spring:micronaut-spring-annotation" }
micronaut-test-core = { module = "io.micronaut.test:micronaut-test-core", version.ref = "micronaut-test" }
micronaut-validation = { module = "io.micronaut:micronaut-validation" }

hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
commons-dbcp2 = { module = "org.apache.commons:commons-dbcp2", version.ref = "commons-dbcp" }
dms = { module = "com.oracle.database.observability:dms", version.ref = "ojdbc" }
graal = { module = "org.graalvm.nativeimage:svm" }
h2 = { module = "com.h2database:h2" }
hibernate-core = { module = "org.hibernate:hibernate-core", version.ref = "hibernate" }
hibernate-jcache = { module = "org.hibernate:hibernate-jcache", version.ref = "hibernate" }
hibernate-micrometer = { module = "org.hibernate:hibernate-micrometer", version.ref = "hibernate" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind" }
jakarta-inject-api = { module = "jakarta.inject:jakarta.inject-api", version.ref = "jakarta-inject-api" }
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "jakarta-persistence-api" }
jakarta-transaction-api = { module = "jakarta.transaction:jakarta.transaction-api", version.ref = "jakarta-transaction-api" }
jasync-mysql = { module = "com.github.jasync-sql:jasync-mysql", version.ref = "jasync" }
jasync-postgresql = { module = "com.github.jasync-sql:jasync-postgresql", version.ref = "jasync" }
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javax-inject" }
jaxb-api = { module = "javax.xml.bind:jaxb-api", version.ref = "jaxb-api" }
jdbi3-sqlobject = { module = "org.jdbi:jdbi3-sqlobject", version.ref = "jdbi" }
jooq = { module = "org.jooq:jooq", version.ref = "jooq" }
mariadb-java-client = { module = "org.mariadb.jdbc:mariadb-java-client", version.ref = "mariadb-driver" }
mssql-jdbc = { module = "com.microsoft.sqlserver:mssql-jdbc", version.ref = "mssql-driver" }
mysql-connector-java = { module = "mysql:mysql-connector-java", version.ref = "mysql-driver" }
ojdbc8 = { module = "com.oracle.database.jdbc:ojdbc8", version.ref = "ojdbc" }
ojdbc8dms = { module = "com.oracle.database.observability:ojdbc8dms", version.ref = "ojdbc" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgres-driver" }
reactor-core = { module = "io.projectreactor:reactor-core" }
sfm-reflect = { module = "org.simpleflatmapper:sfm-reflect", version.ref = "sfm-reflect" }
spring-jdbc = { module = "org.springframework:spring-jdbc", version.ref = "spring" }
spring-orm = { module = "org.springframework:spring-orm", version.ref = "spring" }
spring-tx = { module = "org.springframework:spring-tx" }
testcontainers-jdbc = { module = "org.testcontainers:jdbc" }
testcontainers-mariadb = { module = "org.testcontainers:mariadb" }
testcontainers-mssqlserver = { module = "org.testcontainers:mssqlserver" }
testcontainers-mysql = { module = "org.testcontainers:mysql" }
testcontainers-oracle-xe = { module = "org.testcontainers:oracle-xe" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql" }
testcontainers-spock = { module = "org.testcontainers:spock" }
tomcat-jdbc = { module = "org.apache.tomcat:tomcat-jdbc", version.ref = "tomcat-jdbc" }
ucp = { module = "com.oracle.database.jdbc:ucp", version.ref = "ojdbc" }
vertx-codegen = { module = "io.vertx:vertx-codegen", version.ref = "vertx" }
vertx-mysql-client = { module = "io.vertx:vertx-mysql-client", version.ref = "vertx" }
vertx-pg-client = { module = "io.vertx:vertx-pg-client", version.ref = "vertx" }
vertx-rx-java2 = { module = "io.vertx:vertx-rx-java2", version.ref = "vertx" }
