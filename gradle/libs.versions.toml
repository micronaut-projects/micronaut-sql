[versions]

# Micronaut

micronaut = "4.0.0-RC1"
micronaut-docs = "2.0.0"
micronaut-gradle-plugin = "4.0.0-M4"
micronaut-testresources = "2.0.0-M10"

# Platform dependencies
micronaut-cache = "4.0.0-M5"
micronaut-data = "4.0.0-M9"
micronaut-hibernate-validator = "4.0.0-M6"
micronaut-micrometer = "5.0.0-M4"
micronaut-r2dbc = "5.0.0-M10"
micronaut-reactor = "3.0.0-M7"
micronaut-serde = "2.0.0-M12"
micronaut-spring = "5.0.0-M4"
micronaut-test = "4.0.0-M7"
micronaut-validation = "4.0.0-M10"

# Frameworks

managed-vertx = "4.4.3"
managed-jooq = "3.18.4"
managed-hibernate = "6.2.5.Final"
managed-hibernate-reactive = "2.0.1.Final"
managed-jasync = "2.2.0"
managed-jdbi = "3.38.3"

# JDBC Drivers

managed-ojdbc = "21.10.0.0" # Don't change until the issue described on the following link gets fixed: https://github.com/spring-projects/spring-boot/issues/35006
managed-ojdbcdms = "21.10.0.0"
managed-postgres-driver = "42.6.0"
managed-mariadb-driver = "3.1.4"
managed-mssql-driver = "12.2.0.jre11"
managed-mysql-driver = "8.0.33"

# JDBC Pools

managed-hikari = "5.0.1"
managed-commons-dbcp = "2.9.0"
managed-tomcat-jdbc = "10.1.10"

# JPA

managed-jakarta-persistence-api = "3.1.0"
managed-jakarta-transaction-api = "2.0.1"

managed-h2 = "2.1.214"

# Other

sfm-reflect = "8.2.3"

# Logback

logback = "1.4.6"

# Testing

groovy = "4.0.11"
testcontainers = "1.18.3"
sonar-gradle-plugin = "4.2.1.3168"

micronaut-logging = "1.0.0-M4"
[libraries]
# Core
micronaut-core = { module = 'io.micronaut:micronaut-core-bom', version.ref = 'micronaut' }

micronaut-logging = { module = "io.micronaut.logging:micronaut-logging-bom", version.ref = "micronaut-logging" }

# Platform catalogs

micronaut-cache = { module = "io.micronaut.cache:micronaut-cache-bom", version.ref = "micronaut-cache" }
micronaut-data = { module = "io.micronaut.data:micronaut-data-bom", version.ref = "micronaut-data" }
micronaut-micrometer = { module = "io.micronaut.micrometer:micronaut-micrometer-bom", version.ref = "micronaut-micrometer" }
micronaut-reactor = { module = "io.micronaut.reactor:micronaut-reactor-bom", version.ref = "micronaut-reactor" }
micronaut-r2dbc = { module = "io.micronaut.r2dbc:micronaut-r2dbc-bom", version.ref = "micronaut-r2dbc" }
micronaut-serde = { module = "io.micronaut.serde:micronaut-serde-bom", version.ref = "micronaut-serde" }
micronaut-spring = { module = "io.micronaut.spring:micronaut-spring-bom", version.ref = "micronaut-spring" }
micronaut-test = { module = "io.micronaut.test:micronaut-test-bom", version.ref = "micronaut-test" }
micronaut-validation = { module = "io.micronaut.validation:micronaut-validation-bom", version.ref = "micronaut-validation" }

# Switch to BOM and catalog import when there's a bom
micronaut-hibernate-validator = { module = "io.micronaut.beanvalidation:micronaut-hibernate-validator", version.ref = "micronaut-hibernate-validator" }

# Vertx

managed-vertx-sql-client = { module = "io.vertx:vertx-sql-client", version.ref = "managed-vertx" }
managed-vertx-codegen = { module = "io.vertx:vertx-codegen", version.ref = "managed-vertx" }
managed-vertx-mysql-client = { module = "io.vertx:vertx-mysql-client", version.ref = "managed-vertx" }
managed-vertx-pg-client = { module = "io.vertx:vertx-pg-client", version.ref = "managed-vertx" }
managed-vertx-mssql-client = { module = "io.vertx:vertx-mssql-client", version.ref = "managed-vertx" }
managed-vertx-oracle-client = { module = "io.vertx:vertx-oracle-client", version.ref = "managed-vertx" }
managed-vertx-rx-java2 = { module = "io.vertx:vertx-rx-java2", version.ref = "managed-vertx" }

managed-jooq = { module = "org.jooq:jooq", version.ref = "managed-jooq" }

# Hibernate

managed-hibernate-core = { module = "org.hibernate.orm:hibernate-core", version.ref = "managed-hibernate" }
managed-hibernate-jpamodelgen = { module = "org.hibernate.orm:hibernate-jpamodelgen", version.ref = "managed-hibernate" }
managed-hibernate-jcache = { module = "org.hibernate.orm:hibernate-jcache", version.ref = "managed-hibernate" }
managed-hibernate-micrometer = { module = "org.hibernate.orm:hibernate-micrometer", version.ref = "managed-hibernate" }
managed-hibernate-reactive-core = { module = "org.hibernate.reactive:hibernate-reactive-core", version.ref = "managed-hibernate-reactive" }

# Jasync

managed-jasync-mysql = { module = "com.github.jasync-sql:jasync-mysql", version.ref = "managed-jasync" }
managed-jasync-postgresql = { module = "com.github.jasync-sql:jasync-postgresql", version.ref = "managed-jasync" }

# JDBI

boms-jdbi3 = { module = "org.jdbi:jdbi3-bom", version.ref = "managed-jdbi" }
jdbi3-sqlobject = { module = "org.jdbi:jdbi3-sqlobject", version.ref = "managed-jdbi" }
jdbi3-core = { module = "org.jdbi:jdbi3-core", version.ref = "managed-jdbi" }

# JDBC pools

managed-hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "managed-hikari" }
managed-commons-dbcp2 = { module = "org.apache.commons:commons-dbcp2", version.ref = "managed-commons-dbcp" }
managed-tomcat-jdbc = { module = "org.apache.tomcat:tomcat-jdbc", version.ref = "managed-tomcat-jdbc" }
managed-ucp = { module = "com.oracle.database.jdbc:ucp", version.ref = "managed-ojdbc" }

# UCP

dms = { module = "com.oracle.database.observability:dms", version.ref = "managed-ojdbc" }
ojdbc11dms = { module = "com.oracle.database.observability:ojdbc11dms", version.ref = "managed-ojdbcdms" }

# JDBC drivers

managed-postgresql = { module = "org.postgresql:postgresql", version.ref = "managed-postgres-driver" }
managed-mariadb-java-client = { module = "org.mariadb.jdbc:mariadb-java-client", version.ref = "managed-mariadb-driver" }
managed-mssql-jdbc = { module = "com.microsoft.sqlserver:mssql-jdbc", version.ref = "managed-mssql-driver" }
managed-mysql-connector-java = { module = "mysql:mysql-connector-java", version.ref = "managed-mysql-driver" }
managed-ojdbc8 = { module = "com.oracle.database.jdbc:ojdbc8", version.ref = "managed-ojdbc" }
managed-ojdbc11 = { module = "com.oracle.database.jdbc:ojdbc11", version.ref = "managed-ojdbc" }

managed-h2 = { module = "com.h2database:h2", version.ref = "managed-h2" }

# JPA

managed-jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "managed-jakarta-persistence-api" }
managed-jakarta-transaction-api = { module = "jakarta.transaction:jakarta.transaction-api", version.ref = "managed-jakarta-transaction-api" }

# Others

sfm-reflect = { module = "org.simpleflatmapper:sfm-reflect", version.ref = "sfm-reflect" }

# Testcontainers

testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers" }
testcontainers-jdbc = { module = "org.testcontainers:jdbc" }
testcontainers-mariadb = { module = "org.testcontainers:mariadb" }
testcontainers-mssqlserver = { module = "org.testcontainers:mssqlserver" }
testcontainers-mysql = { module = "org.testcontainers:mysql" }
testcontainers-oracle-xe = { module = "org.testcontainers:oracle-xe" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql" }
testcontainers-spock = { module = "org.testcontainers:spock" }

# Testresources

micronaut-testresources-client = { module = 'io.micronaut.testresources:micronaut-test-resources-client', version.ref = "micronaut-testresources" }

#PLUGINS

gradle-micronaut = { module = "io.micronaut.gradle:micronaut-gradle-plugin", version.ref = "micronaut-gradle-plugin" }
gradle-sonar = { module = "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin", version.ref = "sonar-gradle-plugin" }
